import React, {useContext, useRef, useState} from 'react';import Dialog from "@mui/material/Dialog";import {Button} from "react-bootstrap";import DialogContent from "@mui/material/DialogContent";import mainContext from "../../context/mainContext";import http from "../../plugins/http";const ActivateAccount = () => {    const passwordRef = useRef()    const [pswClass, setPswClass] = useState("form-control")    const [status, setStatus] = useState(null)    const {activateAccount, setActivateAccount, user, setUser} = useContext(mainContext)    function passwordValidation() {        if (passwordRef.current.value.length < 4) return setPswClass("form-control is-invalid")        if (passwordRef.current.value.length >= 4) return setPswClass("form-control is-valid")        if (passwordRef.current.value.length > 20) return setPswClass("form-control is-invalid")    }    const leftTime = user.deleteAccountTime - new Date().getTime()    const time = Math.floor(new Date(leftTime) / 3600000) + ':' + new Date(leftTime).getMinutes()    async function activateAccountFunc() {        if (pswClass !== "form-control is-valid" || !user._id) {            setPswClass("form-control is-invalid")            return setStatus('Įveskite slaptažodį.')        }        if (passwordRef.current.value.length >= 4) {            setPswClass("form-control is-valid")            setStatus('')            const activateAccountData = {                password: passwordRef.current.value            }            const res = await http.post('/activate-account', activateAccountData)            if (!res.success) {                setPswClass("form-control is-invalid")                return setStatus(res.message)            }            if (res.success) {                setUser(res.user)                setActivateAccount(false)            }        }    }    return (        <div>            <Dialog                open={activateAccount}                aria-labelledby="alert-dialog-title"                aria-describedby="alert-dialog-description"            >                <DialogContent>                    <ul>                        <li>Iki Jūsų paskyros ištrynimo liko {time}</li>                        <li>Norėdami vėl aktyvuoti paskyrą įveskite slaptažodį.</li>                    </ul>                    <div className="d-flex flex-column align-items-center justify-content-center p-3">                        <div className="input-group mb-3 inputStyle">                            <input ref={passwordRef} type="password" className={pswClass} onBlur={passwordValidation}                                   placeholder="Slaptažodis" aria-label="Username"                                   aria-describedby="basic-addon1"/>                        </div>                        <div>                            <p className="statusMessage">{status}</p>                        </div>                    </div>                </DialogContent>                <div className='d-flex justify-content-center'>                    <Button onClick={activateAccountFunc} className="inputStyle mb-2" variant='danger'>                        Aktyvuoti paskyrą                    </Button>                </div>            </Dialog>        </div>    )        ;};export default ActivateAccount;